#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.0
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ESP.Finance.SqlDataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ESP")]
	public partial class WorkFlowDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertWorkItemAssignee(WorkItemAssignee instance);
    partial void UpdateWorkItemAssignee(WorkItemAssignee instance);
    partial void DeleteWorkItemAssignee(WorkItemAssignee instance);
    partial void InsertWorkItem(WorkItem instance);
    partial void UpdateWorkItem(WorkItem instance);
    partial void DeleteWorkItem(WorkItem instance);
    partial void InsertWorkflowInstance(WorkflowInstance instance);
    partial void UpdateWorkflowInstance(WorkflowInstance instance);
    partial void DeleteWorkflowInstance(WorkflowInstance instance);
    #endregion
		
		public WorkFlowDataContext() : 
				base(global::ESP.Properties.Settings.Default.ESPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WorkFlowDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkFlowDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkFlowDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkFlowDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<WorkItemAssignee> WorkItemAssignee
		{
			get
			{
				return this.GetTable<WorkItemAssignee>();
			}
		}
		
		public System.Data.Linq.Table<WorkItem> WorkItem
		{
			get
			{
				return this.GetTable<WorkItem>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowInstance> WorkflowInstance
		{
			get
			{
				return this.GetTable<WorkflowInstance>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.wf_WorkItemAssignees")]
	public partial class WorkItemAssignee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkItemAssigneeId;
		
		private int _WorkItemId;
		
		private int _AssigneeId;
		
		private System.Nullable<bool> _NotifyOnly;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkItemAssigneeIdChanging(int value);
    partial void OnWorkItemAssigneeIdChanged();
    partial void OnWorkItemIdChanging(int value);
    partial void OnWorkItemIdChanged();
    partial void OnAssigneeIdChanging(int value);
    partial void OnAssigneeIdChanged();
    partial void OnNotifyOnlyChanging(System.Nullable<bool> value);
    partial void OnNotifyOnlyChanged();
    #endregion
		
		public WorkItemAssignee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkItemAssigneeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorkItemAssigneeId
		{
			get
			{
				return this._WorkItemAssigneeId;
			}
			set
			{
				if ((this._WorkItemAssigneeId != value))
				{
					this.OnWorkItemAssigneeIdChanging(value);
					this.SendPropertyChanging();
					this._WorkItemAssigneeId = value;
					this.SendPropertyChanged("WorkItemAssigneeId");
					this.OnWorkItemAssigneeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkItemId", DbType="Int NOT NULL")]
		public int WorkItemId
		{
			get
			{
				return this._WorkItemId;
			}
			set
			{
				if ((this._WorkItemId != value))
				{
					this.OnWorkItemIdChanging(value);
					this.SendPropertyChanging();
					this._WorkItemId = value;
					this.SendPropertyChanged("WorkItemId");
					this.OnWorkItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssigneeId", DbType="Int NOT NULL")]
		public int AssigneeId
		{
			get
			{
				return this._AssigneeId;
			}
			set
			{
				if ((this._AssigneeId != value))
				{
					this.OnAssigneeIdChanging(value);
					this.SendPropertyChanging();
					this._AssigneeId = value;
					this.SendPropertyChanged("AssigneeId");
					this.OnAssigneeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyOnly", DbType="Bit")]
		public System.Nullable<bool> NotifyOnly
		{
			get
			{
				return this._NotifyOnly;
			}
			set
			{
				if ((this._NotifyOnly != value))
				{
					this.OnNotifyOnlyChanging(value);
					this.SendPropertyChanging();
					this._NotifyOnly = value;
					this.SendPropertyChanged("NotifyOnly");
					this.OnNotifyOnlyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.wf_WorkItems")]
	public partial class WorkItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkItemId;
		
		private System.Guid _WorkflowInstanceId;
		
		private string _WorkItemName;
		
		private string _WorkflowName;
		
		private string _ParticipantName;
		
		private string _Token;
		
		private System.DateTime _CreatedTime;
		
		private int _Status;
		
		private string _Description;
		
		private int _EntityId;
		
		private int _WebSiteId;
		
		private string _WebPage;
		
		private System.Nullable<int> _OperatorId;
		
		private System.Nullable<int> _ClosedBy;
		
		private System.Nullable<System.DateTime> _ClosedTime;
		
		private System.Nullable<System.DateTime> _Timeout;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkItemIdChanging(int value);
    partial void OnWorkItemIdChanged();
    partial void OnWorkflowInstanceIdChanging(System.Guid value);
    partial void OnWorkflowInstanceIdChanged();
    partial void OnWorkItemNameChanging(string value);
    partial void OnWorkItemNameChanged();
    partial void OnWorkflowNameChanging(string value);
    partial void OnWorkflowNameChanged();
    partial void OnParticipantNameChanging(string value);
    partial void OnParticipantNameChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnCreatedTimeChanging(System.DateTime value);
    partial void OnCreatedTimeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEntityIdChanging(int value);
    partial void OnEntityIdChanged();
    partial void OnWebSiteIdChanging(int value);
    partial void OnWebSiteIdChanged();
    partial void OnWebPageChanging(string value);
    partial void OnWebPageChanged();
    partial void OnOperatorIdChanging(System.Nullable<int> value);
    partial void OnOperatorIdChanged();
    partial void OnClosedByChanging(System.Nullable<int> value);
    partial void OnClosedByChanged();
    partial void OnClosedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedTimeChanged();
    partial void OnTimeoutChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeoutChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public WorkItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int WorkItemId
		{
			get
			{
				return this._WorkItemId;
			}
			set
			{
				if ((this._WorkItemId != value))
				{
					this.OnWorkItemIdChanging(value);
					this.SendPropertyChanging();
					this._WorkItemId = value;
					this.SendPropertyChanged("WorkItemId");
					this.OnWorkItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowInstanceId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid WorkflowInstanceId
		{
			get
			{
				return this._WorkflowInstanceId;
			}
			set
			{
				if ((this._WorkflowInstanceId != value))
				{
					this.OnWorkflowInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowInstanceId = value;
					this.SendPropertyChanged("WorkflowInstanceId");
					this.OnWorkflowInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkItemName", DbType="NVarChar(256) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string WorkItemName
		{
			get
			{
				return this._WorkItemName;
			}
			set
			{
				if ((this._WorkItemName != value))
				{
					this.OnWorkItemNameChanging(value);
					this.SendPropertyChanging();
					this._WorkItemName = value;
					this.SendPropertyChanged("WorkItemName");
					this.OnWorkItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowName", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string WorkflowName
		{
			get
			{
				return this._WorkflowName;
			}
			set
			{
				if ((this._WorkflowName != value))
				{
					this.OnWorkflowNameChanging(value);
					this.SendPropertyChanging();
					this._WorkflowName = value;
					this.SendPropertyChanged("WorkflowName");
					this.OnWorkflowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantName", DbType="NVarChar(256) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ParticipantName
		{
			get
			{
				return this._ParticipantName;
			}
			set
			{
				if ((this._ParticipantName != value))
				{
					this.OnParticipantNameChanging(value);
					this.SendPropertyChanging();
					this._ParticipantName = value;
					this.SendPropertyChanged("ParticipantName");
					this.OnParticipantNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(1024) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedTime
		{
			get
			{
				return this._CreatedTime;
			}
			set
			{
				if ((this._CreatedTime != value))
				{
					this.OnCreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedTime = value;
					this.SendPropertyChanged("CreatedTime");
					this.OnCreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSiteId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int WebSiteId
		{
			get
			{
				return this._WebSiteId;
			}
			set
			{
				if ((this._WebSiteId != value))
				{
					this.OnWebSiteIdChanging(value);
					this.SendPropertyChanging();
					this._WebSiteId = value;
					this.SendPropertyChanged("WebSiteId");
					this.OnWebSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPage", DbType="NVarChar(1024)", UpdateCheck=UpdateCheck.Never)]
		public string WebPage
		{
			get
			{
				return this._WebPage;
			}
			set
			{
				if ((this._WebPage != value))
				{
					this.OnWebPageChanging(value);
					this.SendPropertyChanging();
					this._WebPage = value;
					this.SendPropertyChanged("WebPage");
					this.OnWebPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ClosedBy
		{
			get
			{
				return this._ClosedBy;
			}
			set
			{
				if ((this._ClosedBy != value))
				{
					this.OnClosedByChanging(value);
					this.SendPropertyChanging();
					this._ClosedBy = value;
					this.SendPropertyChanged("ClosedBy");
					this.OnClosedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ClosedTime
		{
			get
			{
				return this._ClosedTime;
			}
			set
			{
				if ((this._ClosedTime != value))
				{
					this.OnClosedTimeChanging(value);
					this.SendPropertyChanging();
					this._ClosedTime = value;
					this.SendPropertyChanged("ClosedTime");
					this.OnClosedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timeout", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Timeout
		{
			get
			{
				return this._Timeout;
			}
			set
			{
				if ((this._Timeout != value))
				{
					this.OnTimeoutChanging(value);
					this.SendPropertyChanging();
					this._Timeout = value;
					this.SendPropertyChanged("Timeout");
					this.OnTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.wf_WorkflowInstances")]
	public partial class WorkflowInstance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _InstanceId;
		
		private string _Definition;
		
		private string _DynamicAssembly;
		
		private string _DynamicNamespace;
		
		private long _NextThreadId;
		
		private string _Threads;
		
		private string _DataFeilds;
		
		private string _Users;
		
		private string _EventQueues;
		
		private int _Status;
		
		private bool _IsLocked;
		
		private int _InitiatorId;
		
		private System.DateTime _InitiatedTime;
		
		private System.DateTime _LastModifiedTime;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstanceIdChanging(System.Guid value);
    partial void OnInstanceIdChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    partial void OnDynamicAssemblyChanging(string value);
    partial void OnDynamicAssemblyChanged();
    partial void OnDynamicNamespaceChanging(string value);
    partial void OnDynamicNamespaceChanged();
    partial void OnNextThreadIdChanging(long value);
    partial void OnNextThreadIdChanged();
    partial void OnThreadsChanging(string value);
    partial void OnThreadsChanged();
    partial void OnDataFeildsChanging(string value);
    partial void OnDataFeildsChanged();
    partial void OnUsersChanging(string value);
    partial void OnUsersChanged();
    partial void OnEventQueuesChanging(string value);
    partial void OnEventQueuesChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnInitiatorIdChanging(int value);
    partial void OnInitiatorIdChanged();
    partial void OnInitiatedTimeChanging(System.DateTime value);
    partial void OnInitiatedTimeChanged();
    partial void OnLastModifiedTimeChanging(System.DateTime value);
    partial void OnLastModifiedTimeChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public WorkflowInstance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid InstanceId
		{
			get
			{
				return this._InstanceId;
			}
			set
			{
				if ((this._InstanceId != value))
				{
					this.OnInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._InstanceId = value;
					this.SendPropertyChanged("InstanceId");
					this.OnInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Definition", DbType="NVarChar(256) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DynamicAssembly", DbType="NVarChar(256) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DynamicAssembly
		{
			get
			{
				return this._DynamicAssembly;
			}
			set
			{
				if ((this._DynamicAssembly != value))
				{
					this.OnDynamicAssemblyChanging(value);
					this.SendPropertyChanging();
					this._DynamicAssembly = value;
					this.SendPropertyChanged("DynamicAssembly");
					this.OnDynamicAssemblyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DynamicNamespace", DbType="NVarChar(256) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DynamicNamespace
		{
			get
			{
				return this._DynamicNamespace;
			}
			set
			{
				if ((this._DynamicNamespace != value))
				{
					this.OnDynamicNamespaceChanging(value);
					this.SendPropertyChanging();
					this._DynamicNamespace = value;
					this.SendPropertyChanged("DynamicNamespace");
					this.OnDynamicNamespaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextThreadId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long NextThreadId
		{
			get
			{
				return this._NextThreadId;
			}
			set
			{
				if ((this._NextThreadId != value))
				{
					this.OnNextThreadIdChanging(value);
					this.SendPropertyChanging();
					this._NextThreadId = value;
					this.SendPropertyChanged("NextThreadId");
					this.OnNextThreadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Threads", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Threads
		{
			get
			{
				return this._Threads;
			}
			set
			{
				if ((this._Threads != value))
				{
					this.OnThreadsChanging(value);
					this.SendPropertyChanging();
					this._Threads = value;
					this.SendPropertyChanged("Threads");
					this.OnThreadsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFeilds", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DataFeilds
		{
			get
			{
				return this._DataFeilds;
			}
			set
			{
				if ((this._DataFeilds != value))
				{
					this.OnDataFeildsChanging(value);
					this.SendPropertyChanging();
					this._DataFeilds = value;
					this.SendPropertyChanged("DataFeilds");
					this.OnDataFeildsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Users", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				if ((this._Users != value))
				{
					this.OnUsersChanging(value);
					this.SendPropertyChanging();
					this._Users = value;
					this.SendPropertyChanged("Users");
					this.OnUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventQueues", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EventQueues
		{
			get
			{
				return this._EventQueues;
			}
			set
			{
				if ((this._EventQueues != value))
				{
					this.OnEventQueuesChanging(value);
					this.SendPropertyChanging();
					this._EventQueues = value;
					this.SendPropertyChanged("EventQueues");
					this.OnEventQueuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitiatorId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int InitiatorId
		{
			get
			{
				return this._InitiatorId;
			}
			set
			{
				if ((this._InitiatorId != value))
				{
					this.OnInitiatorIdChanging(value);
					this.SendPropertyChanging();
					this._InitiatorId = value;
					this.SendPropertyChanged("InitiatorId");
					this.OnInitiatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitiatedTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InitiatedTime
		{
			get
			{
				return this._InitiatedTime;
			}
			set
			{
				if ((this._InitiatedTime != value))
				{
					this.OnInitiatedTimeChanging(value);
					this.SendPropertyChanging();
					this._InitiatedTime = value;
					this.SendPropertyChanged("InitiatedTime");
					this.OnInitiatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedTime
		{
			get
			{
				return this._LastModifiedTime;
			}
			set
			{
				if ((this._LastModifiedTime != value))
				{
					this.OnLastModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedTime = value;
					this.SendPropertyChanged("LastModifiedTime");
					this.OnLastModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
